// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String         @id @default(cuid())
    name          String?
    email         String?        @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    // ... (keep your existing fields)
    Subscription  Subscription[]
    Carousel      Carousel[]
    UserBranding  UserBranding?
    Image         Image[]
}

model Subscription {
    id                         String   @id @default(cuid())
    userId                     String   @unique
    orderId                    String   @unique // Add this line
    status                     String
    endDate                    DateTime
    createdAt                  DateTime @default(now())
    productName                String
    variantName                String
    subscriptionLengthInMonths Int
    totalAmount                Float
    currency                   String
    user                       User     @relation(fields: [userId], references: [id])
}

model Carousel {
    id                      String   @id @default(uuid())
    userId                  String
    name                    String
    titleTextSettings       Json
    descriptionTextSettings Json
    taglineTextSettings     Json
    layout                  Json
    background              Json
    slides                  Json
    sharedSelectedElement   Json?
    fontFamily              String
    createdAt               DateTime @default(now())
    updatedAt               DateTime @updatedAt
    globalBackground        Json?
    user                    User     @relation(fields: [userId], references: [id])
}

model UserBranding {
    id       String  @id @default(uuid())
    userId   String  @unique
    name     String
    handle   String
    headshot String?
    user     User    @relation(fields: [userId], references: [id])
}

model Image {
    id        String   @id @default(uuid())
    userId    String
    url       String
    name      String
    size      Int
    createdAt DateTime @default(now())
    user      User     @relation(fields: [userId], references: [id])
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
